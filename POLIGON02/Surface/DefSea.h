
             //  Константы Sea
#ifndef _DEFSEA_H
#define _DEFSEA_H

namespace PTPV
{

namespace sea
{
 
const int ALIVE_SELEKT_MAX=4;		  // максимальное количество отобранных
                                      // "живых" трасс
const float DIF_DEAD_PSI = 1.57f;     // строб отбора "мёртвых" трасс по курсу  
const double DIF_DEAD_T = 90.;        // максимальное время старения
                                      // "мёртвых" трасс 
const double DIF_ERASE_T = 40.;       // максимальное время старения 
                                      // трасс при принудительном стирании
                                      // информации об источниках
const float DIF_H = 6000.f;           // строб отбора трасс по высоте
const float DIF_XY = 10000.f;         // строб отбора трасс по координатам
const double DIF_IDENT_XY = 3000.;    // строб отождествления трасс по координатам
const float DIF_IND_NUM_XY = 15000.f; // строб отождествления трасс по
                                      // индивидуальному номеру
const double DIF_IND_NUM_T = 60.;     // время старения информации об
                                      // индивидуальном номере
const double DIF_CHECK_XY = 5000.;    // строб сопровождения трасс по координатам
const int MISMAT_XY_COUNT = 3;        // максимальное значение счётчика
                                      // несоответствия трассы источника
                                      // обобщённой трассе по координатам
const int MISMAT_SENS_COUNT = 3;      // максимальное значение счётчика
                                      // несоответствия обобщённой трассы по
                                      // количеству источников сопровождения

	     // константы последовательного анализа

const int SEQ_CANDIDATE_MAX = 4;      // максимальное количество кандидатов
                                      // последовательного анализа
const int LIMIT_STEP_MAX = 8;         // максимальное количество шагов
                                      // принятия решения
const int LIMIT_STEP_MIN = 5;         // минимальное количество шагов
                                      // принятия решения
const float FUZZY_KOEF = 0.000001f;   // коэффициент нечёткой функции
const float CRIT_MIN = 1.;            // нижний порог последовательного анализа
                                      // при первой проверке (отождествление)
const float CRIT_MAX = 100.;          // верхний порог последовательного анализа
                                      // при первой проверке (новая)
const float CRIT = 20.;               // порог последовательного анализа
                                      // при последней проверке

} // namespace sea

} // namespace PTPV

#endif // _DEFSEA_H
