/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@Copyright (c)          : АО "РКС"
@Имя файла              : UGeneral.h
@Описание               : Определения перечислений и типа структуры
                          для унифицированного заголовка любых сообщений обмена
                          информацией в ФПО.
@Замечания              : Общий заголовочный файл ФПО.
@Автор                  : Самсон С. Ю., Сорокин А.В.
@Дата                   : 21.05.2019
@Инструментальная среда : Microsoft Visual Studio Express 2012
@Дополнительно          : Передаётся разработчикам всех ПК и ПКп.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

#ifndef UGENERAL_H
#define UGENERAL_H

namespace COMMON
{

// ---------------------------------------------------------------------------
/**
 * Общая структура сообщений обмена данными между КФП из состава ФПО БИУС.
 * Сообщение должно состоять из унифицированного заголовка и данных.
 */
                                                                             /*
struct TХХХХXX : public TUMsgHdr
{
	данные
};                                                                           */


//-----------------------------------
// Тип программного комплекса из состава ФПО
// (используется при формировании унифицированного заголовка).                                                                             */
enum EUFuncPrgType
{
	EU_FP_UNKNOWN = 255,   // неизвестный тип задачи.
	EU_FP_ALL     = 1,
	EU_FP_AMST    = 18,    // ПК служебных функций / ПК AMST
	EU_FP_AMSL    = 19,    // ПК регистрации данных изделия / ПК AMSL
	EU_FP_HMSO    = 22,    // ПК пользовательского интерфейса
	                       //_ОБУ изделия / ПК HMSO
	EU_FP_PTPV    = 23,    // ПК третичной обработки / ПК ТОИ
	EU_FP_PRS     = 25,    // ПК оповещения / ПК PRS
	EU_FP_PES     = 99     // ПК имитации внешней обстановки / ПК ПИ
}; // enum EUFuncPrgType

//-----------------------------------
// Экземпляр программного комплекса из состава ФПО
// (используется при формировании унифицированного заголовка).
enum EURegimeOper
{
	EU_OWS_ALL      = 0,     // Всем ОБУ
}; // enum EURegimeOper

//-----------------------------------
// Тип данных регистрации ТОИ.
enum EURegMsgType_PTPV
{
	PTPV_E_RMT_AIR_SENS     = 23001,    // Сообщение о ВО со входа
	PTPV_E_RMT_AIR_GEN      = 23002,    // Сообщение о ВО на выход
 	PTPV_E_RMT_SURFACE_SENS = 23004,    // Сообщение о МО либо НО со входа
	PTPV_E_RMT_SURFACE_GEN  = 23005,    // Сообщение о МО либо НО на выход
}; // EURegMsgType_PTPV

//-----------------------------------
// Тип сообщения ТОИ.
enum EUMsgType_PTPV
{
	EU_MT_PTPV_AIR =     1,    // Сообщение о ВО
	EU_MT_PTPV_SURFACE = 2     // Сообщение о МО либо НО
}; // enum EUMsgType


#pragma pack(push, 4)

// ---------------------------------------------------------------------------
/**
 * Информация унифицированного заголовка,
 * предваряющего данные для любого обмена между КФП.
 */

struct TUMsgHdr
{
	long          msgLength;            // Длина передаваемого сообщения
	                                    //_в байтах, включая длину заголовка
	long          msgType;              // Идентификатор типа сообщения
	long          msgNum;               // Порядковый номер сообщения от
	                                    //_соответствующей программы-отправителя
	double        msgTime;              // Время отправки сообщения
	                                    //_(в секундах с 01.01.1970 (шкала UTC)
	unsigned char senderType;	        // Идентификатор типа
	                                    //_программы-отправителя сообщения
	                                    //_(заполняется соответствующим
	                                    //_значением из enum EUFuncPrgType{})
	unsigned char recipientType;        // Идентификатор типа
	                                    //_программы-получателя сообщения
                                        //_(заполняется соответствующим
	                                    //_значением из enum EUFuncPrgType{})
	unsigned char senderInstance;       // Идентификатор экземпляра
	                                    //_программы-отправителя сообщения
	unsigned char recipientInstance;    // Идентификатор экземпляра
	                                    //_программы-получателя сообщения
}; // struct TUMsgHdr

#pragma pack(pop)

} // namespace COMMON

#endif /* UGENERAL_H */
